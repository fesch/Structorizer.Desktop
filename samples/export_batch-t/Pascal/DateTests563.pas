{ Several declaration and initialisation variants for test of Analyser, Executor, and Generators }
program DateTests563;
{ Generated by Structorizer 3.32-31 }

type
  Date = RECORD
      year:	Longint;
      month:	Smallint;
      day:	Smallint;
    END;


{
  Detects whether the given year is a leap year in the Gregorian calendar
  (extrapolated backwards beyonds its inauguration)
}
function isLeapYear(year: ???): boolean;

begin
  { Most years aren't leap years... }
  isLeapYear <- false;
  if (year mod 4 = 0) and (year mod 100 <> 0) then
  begin
    { This is a standard leap year }
    isLeapYear <- true;
  end;
  else if (year mod 400 = 0) then
  begin
    {
      One of the rare leap years
      occurring every 400 years
    }
    isLeapYear <- true;
  end;

end;

{
  Computes the number of days the given month (1..12)
  has in the the given year
}
function daysInMonth423(aDate: Date): Longint;

begin
  { select the case where illegal values are also considered }
  case (aDate.month) of
    1, 3, 5, 7, 8, 10, 12:
      begin
        days <- 31;
      end;
    4, 6, 9, 11:
      begin
        days <- 30;
      end;
    2:
      begin
        { Default value for February }
        days <- 28;
        {
          To make the call work it has to be done in
          a separate element (cannot be performed
          as part of the condition of an Alternative)
        }
        isLeap <- isLeapYear(aDate.year);
        if (isLeap) then
        begin
          days <- 29;
        end;
      end;
    else
      {
        This is the return value for illegal months.
        It is easy to check
      }
      days <- 0;
  end;
  daysInMonth423 := days;

end;
{ = = = = 8< = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = }

begin
  type Date = record{year: int; month, day: short};
  var today: Date;
  Date someDay <- Date{day: 24, month: 2, year: 2017};
  nDays <- daysInMonth423(someDay);
  today <- Date{2018, 7, 20};
  type Person = record { name: string; birth: Date; test: array[3] of int;};
  var me: Person <- Person{"roger", Date{1985, 3, 6}, {0, 8, 15}};
  var declArray: array of double <- {9.0, 7.5, -6.4, 1.7, 0.0};
  var explArray: double[3] <- {7.1, 0.5, -1.5};
  double doof[3] <- {0.4};
  double[2] dull <- {-12.7, 96.03};
  values <- {47, 11};
end.
