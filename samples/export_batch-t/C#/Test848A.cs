// Generated by Structorizer 3.32-32 

// Copyright (C) 2020-04-13 Kay Gürtzig 
// License: GPLv3-link 
// GNU General Public License (V 3) 
// https://www.gnu.org/licenses/gpl.html 
// http://www.gnu.de/documents/gpl.de.html 

using System;

/// <summary>
/// Test for indirect and concurrent includes
/// </summary>
public class TestMain {

	private static boolean initDone_IncludeA = false;
	private static string a2;
	private static int a1;

	private static boolean initDone_IncludeB = false;
	private static double b2;
	private static string b1;

	/// <param name="args"> array of command line arguments </param>
	public static void Main(string[] args) {

		initialize_IncludeA();
		initialize_IncludeB();
		
		// TODO: Check and accomplish variable declarations: 

		a1 <- 7;
		b1 <- a2 + " oder blöd";
		c1 <- a1 * b2;
		c2 <- testSub(c1, a1 + b2, b1);
		Console.Write(a1); Console.Write(" "); Console.Write(a2); Console.Write(" "); Console.Write(b1); Console.Write(" "); Console.WriteLine(b2);
	}

	/// <summary>
	/// Automatically created initialization procedure for IncludeA
	/// </summary>
	private static void initialize_IncludeA() {
		if (not initDone_IncludeA) {
			var a1: int;
			a2 <- "doof";
			initDone_IncludeA <- true;
		}
	}

	/// <summary>
	/// Automatically created initialization procedure for IncludeB
	/// </summary>
	private static void initialize_IncludeB() {
		if (not initDone_IncludeB) {
			var b1: string;
			b2 <- 3.9;
			initDone_IncludeB <- true;
		}
	}

	/// <summary>
	/// </summary>
	/// <param name="c1"> TODO </param>
	/// <param name="param2"> TODO </param>
	/// <param name="b1"> TODO </param>
	/// <return> TODO </return>
	private static int testSub(double c1, double param2, string b1) {
		initialize_IncludeA();
		
		// TODO: Check and accomplish variable declarations: 

		d1 <- a1;
		d2 <- a2;
		a1 <- 15;
		return length(a2 + b1) + floor(c1) * ceil(param2);
	}

// = = = = 8< = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 


}
