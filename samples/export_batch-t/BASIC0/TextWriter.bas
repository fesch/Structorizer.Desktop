10 REM Demo program for routine drawText() 
20 REM Asks the user to enter a text, a wanted text height and colour, 
30 REM and then draws this string onto the turtle screen. Places every 
40 REM entered text to a new line. 
50 REM Generated by Structorizer 3.32-31 
60 
70 REM Copyright (C) 2019-10-10 Kay GÃ¼rtzig 
80 REM License: GPLv3-link 
90 REM GNU General Public License (V 3) 
100 REM https://www.gnu.org/licenses/gpl.html 
110 REM http://www.gnu.de/documents/gpl.de.html 
120 
130 REM  
140 REM program TextDemo
150 REM TODO: add the respective type suffixes to your variable names if required 
160 REM  
170 PRINT "This is a demo program for text writing with Turleizer."
180 showTurtle()
190 penDown()
200 y <- 0
210 DO
220   PRINT "Enter some text (empty string to exit)"; : INPUT text
230   REM Make sure the content is interpreted as string 
240   text <- "" + text
250   IF text <> "" THEN
260     DO
270       PRINT "Height of the text (pixels)"; : INPUT height
280     LOOP UNTIL height >= 5
290     DO
300       PRINT "Colour (1=black, 2=red, 3=yellow, 4=green, 5=cyan, 6=blue, 7=pink, 8=gray, 9=orange, 10=violet)"; : INPUT colour
310     LOOP UNTIL colour >= 1 and colour <= 10
320     y <- y + height + 2
330     gotoXY(0, y - 2)
340     CALL drawText(text, height, colour)
350   END IF
360 LOOP UNTIL text = ""
370 gotoXY(0, y + 15)
380 CALL drawText("Thank you, bye.", 10, 4)
390 hideTurtle()
400 END
410 REM  
420 REM TODO: Add type-specific suffixes where necessary! 
430 SUB backward(len, color)
440   REM TODO: add the respective type suffixes to your variable names if required 
450   REM  
460   REM  
470   SELECT CASE color
480     CASE 1
490       backward(len) : REM color = ffffff
500     CASE 2
510       backward(len) : REM color = ff8080
520     CASE 3
530       backward(len) : REM color = ffff80
540     CASE 4
550       backward(len) : REM color = 80ff80
560     CASE 5
570       backward(len) : REM color = 80ffff
580     CASE 6
590       backward(len) : REM color = 0080ff
600     CASE 7
610       backward(len) : REM color = ff80c0
620     CASE 8
630       backward(len) : REM color = c0c0c0
640     CASE 9
650       backward(len) : REM color = ff8000
660     CASE 10
670       backward(len) : REM color = 8080ff
680   END SELECT
690 END SUB
700 REM  
710 REM Draws a blank for font height h, ignoring the colorNo 
720 REM TODO: Add type-specific suffixes where necessary! 
730 SUB blank(h, colorNo)
740   REM TODO: add the respective type suffixes to your variable names if required 
750   REM  
760   REM  
770   width <- h/2.0
780   penUp()
790   right(90)
800   forward(width) : REM color = ffffff
810   left(90)
820 END SUB
830 REM  
840 REM TODO: Add type-specific suffixes where necessary! 
850 SUB forward(len, color)
860   REM TODO: add the respective type suffixes to your variable names if required 
870   REM  
880   REM  
890   SELECT CASE color
900     CASE 1
910       forward(len) : REM color = ffffff
920     CASE 2
930       forward(len) : REM color = ff8080
940     CASE 3
950       forward(len) : REM color = ffff80
960     CASE 4
970       forward(len) : REM color = 80ff80
980     CASE 5
990       forward(len) : REM color = 80ffff
1000     CASE 6
1010       forward(len) : REM color = 0080ff
1020     CASE 7
1030       forward(len) : REM color = ff80c0
1040     CASE 8
1050       forward(len) : REM color = c0c0c0
1060     CASE 9
1070       forward(len) : REM color = ff8000
1080     CASE 10
1090       forward(len) : REM color = 8080ff
1100   END SELECT
1110 END SUB
1120 REM  
1130 REM Draws digit 1 in the colour specified by colorNo with font height h 
1140 REM from the current turtle position. 
1150 REM TODO: Add type-specific suffixes where necessary! 
1160 SUB digit1(h, colorNo)
1170   REM TODO: add the respective type suffixes to your variable names if required 
1180   REM  
1190   REM  
1200   penUp()
1210   forward(h/2.0) : REM color = ffffff
1220   penDown()
1230   right(45)
1240   CALL forward(h/sqrt(2), colorNo)
1250   left(45)
1260   CALL backward(h, colorNo)
1270 END SUB
1280 REM  
1290 REM Draws digit 4 in the colour specified by colorNo with font height h 
1300 REM from the current turtle position. 
1310 REM TODO: Add type-specific suffixes where necessary! 
1320 SUB digit4(h, colorNo)
1330   REM TODO: add the respective type suffixes to your variable names if required 
1340   REM  
1350   REM  
1360   REM Octagon edge length 
1370   b <- h * 0.5 / (sqrt(2.0) + 1)
1380   REM Cathetus of the corner triangle outside the octagon 
1390   c <- b / sqrt(2.0)
1400   REM inner angle at top of the triangle 
1410   angle <- toDegrees(atan(1 - 2.0*c/h))
1420   right(90)
1430   penUp()
1440   forward(c + b) : REM color = ffffff
1450   penDown()
1460   left(90)
1470   CALL forward(h, colorNo)
1480   left(180 - angle)
1490   CALL forward(sqrt(h*h/4.0 + sqr(h/2.0 - c)), colorNo)
1500   left(90 + angle)
1510   CALL forward(h/2.0, colorNo)
1520   penUp()
1530   left(90)
1540   backward(h/2.0) : REM color = ffffff
1550   penDown()
1560 END SUB
1570 REM  
1580 REM Draws digit 7 in the colour specified by colorNo with font height h 
1590 REM from the current turtle position. 
1600 REM TODO: Add type-specific suffixes where necessary! 
1610 SUB digit7(h, colorNo)
1620   REM TODO: add the respective type suffixes to your variable names if required 
1630   REM  
1640   REM  
1650   angle <- 90 + toDegrees(atan(0.5))
1660   penUp()
1670   forward(h) : REM color = ffffff
1680   penDown()
1690   right(90)
1700   CALL forward(h/2.0, colorNo)
1710   right(angle)
1720   CALL forward(h * sqrt(1.25), colorNo)
1730   left(angle)
1740   penUp()
1750   forward(h/2.0) : REM color = ffffff
1760   left(90)
1770   penDown()
1780 END SUB
1790 REM  
1800 REM Draws letter A in colour specified by colorNo with font height h 
1810 REM from the current turtle position. 
1820 REM TODO: Add type-specific suffixes where necessary! 
1830 SUB letterA(h, colorNo)
1840   REM TODO: add the respective type suffixes to your variable names if required 
1850   REM  
1860   REM  
1870   width <- h/2.0
1880   hypo <- sqrt(h*h + width*width/4.0)
1890   rotAngle <- toDegrees(atan(width/2.0/h))
1900   right(rotAngle)
1910   CALL forward(hypo/2.0, colorNo)
1920   right(90 - rotAngle)
1930   CALL forward(width/2.0, colorNo)
1940   penUp()
1950   backward(width/2.0) : REM color = ffffff
1960   penDown()
1970   left(90 - rotAngle)
1980   CALL forward(hypo/2.0, colorNo)
1990   left(2*rotAngle)
2000   CALL forward(-hypo, colorNo)
2010   right(rotAngle)
2020 END SUB
2030 REM  
2040 REM Draws letter E in colour specified by colorNo with font height h 
2050 REM from the current turtle position. 
2060 REM TODO: Add type-specific suffixes where necessary! 
2070 SUB letterE(h, colorNo)
2080   REM TODO: add the respective type suffixes to your variable names if required 
2090   REM  
2100   REM  
2110   width <- h/2.0
2120   CALL forward(h, colorNo)
2130   right(90)
2140   CALL forward(width, colorNo)
2150   right(90)
2160   penUp()
2170   forward(h/2.0) : REM color = ffffff
2180   right(90)
2190   penDown()
2200   CALL forward(width, colorNo)
2210   left(90)
2220   penUp()
2230   forward(h/2.0) : REM color = ffffff
2240   left(90)
2250   penDown()
2260   CALL forward(width, colorNo)
2270   left(90)
2280 END SUB
2290 REM  
2300 REM Draws letter F in colour specified by colorNo with font height h 
2310 REM from the current turtle position. 
2320 REM TODO: Add type-specific suffixes where necessary! 
2330 SUB letterF(h, colorNo)
2340   REM TODO: add the respective type suffixes to your variable names if required 
2350   REM  
2360   REM  
2370   width <- h/2.0
2380   CALL forward(h, colorNo)
2390   right(90)
2400   CALL forward(width, colorNo)
2410   right(90)
2420   penUp()
2430   forward(h/2.0) : REM color = ffffff
2440   right(90)
2450   penDown()
2460   CALL forward(width, colorNo)
2470   left(90)
2480   penUp()
2490   forward(h/2.0) : REM color = ffffff
2500   left(90)
2510   forward(width) : REM color = ffffff
2520   penDown()
2530   left(90)
2540 END SUB
2550 REM  
2560 REM Draws letter H in colour specified by colorNo with font height h 
2570 REM from the current turtle position. 
2580 REM TODO: Add type-specific suffixes where necessary! 
2590 SUB letterH(h, colorNo)
2600   REM TODO: add the respective type suffixes to your variable names if required 
2610   REM  
2620   REM  
2630   width <- h/2.0
2640   CALL forward(h, colorNo)
2650   penUp()
2660   right(90)
2670   forward(width) : REM color = ffffff
2680   right(90)
2690   penDown()
2700   CALL forward(h/2.0, colorNo)
2710   right(90)
2720   CALL forward(width, colorNo)
2730   penUp()
2740   backward(width) : REM color = ffffff
2750   left(90)
2760   penDown()
2770   CALL forward(h/2.0, colorNo)
2780   left(180)
2790 END SUB
2800 REM  
2810 REM Draws letter I in colour specified by colorNo with font height h 
2820 REM from the current turtle position. 
2830 REM TODO: Add type-specific suffixes where necessary! 
2840 SUB letterI(h, colorNo)
2850   REM TODO: add the respective type suffixes to your variable names if required 
2860   REM  
2870   REM  
2880   REM Octagon edge length 
2890   b <- h * 0.5 / (sqrt(2.0) + 1)
2900   REM Cathetus of the corner triangle outside the octagon 
2910   c <- b / sqrt(2.0)
2920   penUp()
2930   right(90)
2940   forward(c) : REM color = ffffff
2950   penDown()
2960   CALL forward(b, colorNo)
2970   penUp()
2980   backward(b/2.0) : REM color = ffffff
2990   left(90)
3000   penDown()
3010   CALL forward(h, colorNo)
3020   penUp()
3030   right(90)
3040   backward(b/2.0) : REM color = ffffff
3050   penDown()
3060   CALL forward(b, colorNo)
3070   penUp()
3080   forward(b/2 + c) : REM color = ffffff
3090   left(90)
3100   backward(h) : REM color = ffffff
3110   penDown()
3120 END SUB
3130 REM  
3140 REM Draws letter K in colour specified by colorNo with font height h 
3150 REM from the current turtle position. 
3160 REM TODO: Add type-specific suffixes where necessary! 
3170 SUB letterK(h, colorNo)
3180   REM TODO: add the respective type suffixes to your variable names if required 
3190   REM  
3200   REM  
3210   width <- h/2.0
3220   diag <- h/sqrt(2.0)
3230   CALL forward(h, colorNo)
3240   penUp()
3250   right(90)
3260   forward(width) : REM color = ffffff
3270   right(135)
3280   penDown()
3290   CALL forward(diag, colorNo)
3300   left(90)
3310   CALL forward(diag, colorNo)
3320   left(135)
3330 END SUB
3340 REM  
3350 REM Draws letter L in colour specified by colorNo with font height h 
3360 REM from the current turtle position. 
3370 REM TODO: Add type-specific suffixes where necessary! 
3380 SUB letterL(h, colorNo)
3390   REM TODO: add the respective type suffixes to your variable names if required 
3400   REM  
3410   REM  
3420   width <- h/2.0
3430   CALL forward(h, colorNo)
3440   penUp()
3450   backward(h) : REM color = ffffff
3460   right(90)
3470   penDown()
3480   CALL forward(width, colorNo)
3490   left(90)
3500 END SUB
3510 REM  
3520 REM Draws letter M in colour specified by colorNo with font height h 
3530 REM from the current turtle position. 
3540 REM TODO: Add type-specific suffixes where necessary! 
3550 SUB letterM(h, colorNo)
3560   REM TODO: add the respective type suffixes to your variable names if required 
3570   REM  
3580   REM  
3590   width <- h/2.0
3600   hypo <- sqrt(width*width + h*h)/2.0
3610   rotAngle <- toDegrees(atan(width/h))
3620   CALL forward(h, colorNo)
3630   left(rotAngle)
3640   CALL forward(-hypo, colorNo)
3650   right(2*rotAngle)
3660   CALL forward(hypo, colorNo)
3670   left(rotAngle)
3680   CALL forward(-h, colorNo)
3690 END SUB
3700 REM  
3710 REM Draws letter N in colour specified by colorNo with font height h 
3720 REM from the current turtle position. 
3730 REM TODO: Add type-specific suffixes where necessary! 
3740 SUB letterN(h, colorNo)
3750   REM TODO: add the respective type suffixes to your variable names if required 
3760   REM  
3770   REM  
3780   width <- h/2.0
3790   hypo <- sqrt(width*width + h*h)
3800   rotAngle <- toDegrees(atan(width/h))
3810   CALL forward(h, colorNo)
3820   left(rotAngle)
3830   CALL forward(-hypo, colorNo)
3840   right(rotAngle)
3850   CALL forward(h, colorNo)
3860   penUp()
3870   backward(h) : REM color = ffffff
3880   penDown()
3890 END SUB
3900 REM  
3910 REM Draws letter T in colour specified by colorNo with font height h 
3920 REM from the current turtle position. 
3930 REM TODO: Add type-specific suffixes where necessary! 
3940 SUB letterT(h, colorNo)
3950   REM TODO: add the respective type suffixes to your variable names if required 
3960   REM  
3970   REM  
3980   width <- h/2.0
3990   penUp()
4000   forward(h) : REM color = ffffff
4010   penDown()
4020   right(90)
4030   CALL forward(width, colorNo)
4040   penUp()
4050   backward(width/2.0) : REM color = ffffff
4060   penDown()
4070   right(90)
4080   CALL forward(h, colorNo)
4090   left(90)
4100   penUp()
4110   forward(width/2.0) : REM color = ffffff
4120   penDown()
4130   left(90)
4140 END SUB
4150 REM  
4160 REM Draws letter V in colour specified by colorNo with font height h 
4170 REM from the current turtle position. 
4180 REM TODO: Add type-specific suffixes where necessary! 
4190 SUB letterV(h, colorNo)
4200   REM TODO: add the respective type suffixes to your variable names if required 
4210   REM  
4220   REM  
4230   width <- h/2.0
4240   hypo <- sqrt(h*h + width*width/4.0)
4250   rotAngle <- toDegrees(atan(width/2.0/h))
4260   penUp()
4270   forward(h) : REM color = ffffff
4280   left(rotAngle)
4290   penDown()
4300   CALL forward(-hypo, colorNo)
4310   right(2*rotAngle)
4320   CALL forward(hypo, colorNo)
4330   penUp()
4340   left(rotAngle)
4350   backward(h) : REM color = ffffff
4360   penDown()
4370 END SUB
4380 REM  
4390 REM Draws letter W in colour specified by colorNo with font height h 
4400 REM from the current turtle position. 
4410 REM TODO: Add type-specific suffixes where necessary! 
4420 SUB letterW(h, colorNo)
4430   REM TODO: add the respective type suffixes to your variable names if required 
4440   REM  
4450   REM  
4460   width <- h/2.0
4470   width_3 <- width/3.0
4480   hypo <- sqrt(width_3*width_3 + h*h)
4490   rotAngle <- toDegrees(atan(width_3/h))
4500   penUp()
4510   forward(h) : REM color = ffffff
4520   left(rotAngle)
4530   penDown()
4540   CALL forward(-hypo, colorNo)
4550   right(2*rotAngle)
4560   CALL forward(hypo, colorNo)
4570   penUp()
4580   left(90+rotAngle)
4590   forward(width_3) : REM color = ffffff
4600   right(90-rotAngle)
4610   penDown()
4620   CALL forward(-hypo, colorNo)
4630   right(2*rotAngle)
4640   CALL forward(hypo, colorNo)
4650   penUp()
4660   left(rotAngle)
4670   backward(h) : REM color = ffffff
4680   penDown()
4690 END SUB
4700 REM  
4710 REM Draws letter X in colour specified by colorNo with font height h 
4720 REM from the current turtle position. 
4730 REM TODO: Add type-specific suffixes where necessary! 
4740 SUB letterX(h, colorNo)
4750   REM TODO: add the respective type suffixes to your variable names if required 
4760   REM  
4770   REM  
4780   width <- h/2.0
4790   hypo <- sqrt(width*width + h*h)
4800   rotAngle <- toDegrees(atan(width/h))
4810   right(rotAngle)
4820   CALL forward(hypo, colorNo)
4830   penUp()
4840   left(90+rotAngle)
4850   forward(width) : REM color = ffffff
4860   right(90-rotAngle)
4870   penDown()
4880   CALL forward(-hypo, colorNo)
4890   right(rotAngle)
4900 END SUB
4910 REM  
4920 REM Draws letter Y in colour specified by colorNo with font height h 
4930 REM from the current turtle position. 
4940 REM TODO: Add type-specific suffixes where necessary! 
4950 SUB letterY(h, colorNo)
4960   REM TODO: add the respective type suffixes to your variable names if required 
4970   REM  
4980   REM  
4990   width <- h/2.0
5000   hypo <- sqrt(width*width + h*h)/2.0
5010   rotAngle <- toDegrees(atan(width/h))
5020   penUp()
5030   forward(h) : REM color = ffffff
5040   left(rotAngle)
5050   penDown()
5060   CALL forward(-hypo, colorNo)
5070   right(rotAngle)
5080   penUp()
5090   backward(h/2.0) : REM color = ffffff
5100   penDown()
5110   CALL forward(h/2.0, colorNo)
5120   right(rotAngle)
5130   CALL forward(hypo, colorNo)
5140   left(rotAngle)
5150   penUp()
5160   backward(h) : REM color = ffffff
5170   penDown()
5180 END SUB
5190 REM  
5200 REM Draws letter Z in colour specified by colorNo with font height h 
5210 REM from the current turtle position. 
5220 REM TODO: Add type-specific suffixes where necessary! 
5230 SUB letterZ(h, colorNo)
5240   REM TODO: add the respective type suffixes to your variable names if required 
5250   REM  
5260   REM  
5270   width <- h/2.0
5280   hypo <- sqrt(width*width + h*h)
5290   rotAngle <- toDegrees(atan(width/h))
5300   penUp()
5310   forward(h) : REM color = ffffff
5320   right(90)
5330   penDown()
5340   CALL forward(width, colorNo)
5350   left(90-rotAngle)
5360   CALL forward(-hypo, colorNo)
5370   right(90-rotAngle)
5380   CALL forward(width, colorNo)
5390   left(90)
5400 END SUB
5410 REM  
5420 REM Draws nEdges edges of a regular n-polygon with edge length a 
5430 REM counter-clockwise, if ctrclkws is true, or clockwise if ctrclkws is false. 
5440 REM TODO: Add type-specific suffixes where necessary! 
5450 SUB polygonPart(a AS double, n AS integer, ctrclkws AS boolean, nEdges AS integer, color AS Integer)
5460   REM TODO: add the respective type suffixes to your variable names if required 
5470   REM  
5480   REM  
5490   rotAngle <- 360.0/n
5500   IF ctrclkws THEN
5510     rotAngle <- -rotAngle
5520   END IF
5530   FOR k = 1 TO nEdges
5540     right(rotAngle)
5550     CALL forward(a, color)
5560   NEXT k
5570 END SUB
5580 REM  
5590 REM Draws a dummy character (small centered square) with font height h and 
5600 REM the colour encoded by colorNo 
5610 REM TODO: Add type-specific suffixes where necessary! 
5620 SUB charDummy(h, colorNo)
5630   REM TODO: add the respective type suffixes to your variable names if required 
5640   REM  
5650   REM  
5660   width <- h / 2.0
5670   REM Octagon edge length (here: edge lengzh of the square) 
5680   b <- width / (sqrt(2.0) + 1)
5690   REM Cathetus of the corner triangle outside the octagon 
5700   c <- (width - b) / 2.0
5710   d <- b / sqrt(2.0)
5720   penUp()
5730   forward(h/2.0-b/2.0) : REM color = ffffff
5740   right(90)
5750   forward(c) : REM color = ffffff
5760   right(90)
5770   penDown()
5780   REM Draws the square with edge length b 
5790   CALL polygonPart(b, 4, true, 4, colorNo)
5800   penUp()
5810   left(90)
5820   forward(b + c) : REM color = ffffff
5830   left(90)
5840   backward(h/2.0-b/2.0) : REM color = ffffff
5850   penDown()
5860 END SUB
5870 REM  
5880 REM Draws a comma in colour specified by colorNo with font height h 
5890 REM from the current turtle position. 
5900 REM TODO: Add type-specific suffixes where necessary! 
5910 SUB comma(h, colorNo)
5920   REM TODO: add the respective type suffixes to your variable names if required 
5930   REM  
5940   REM  
5950   REM Octagon edge length 
5960   b <- h * 0.5 / (sqrt(2.0) + 1)
5970   REM Cathetus of the outer corner triangle of the octagon 
5980   c <- b / sqrt(2.0)
5990   rotAngle <- toDegrees(atan(0.5))
6000   hypo <- c * sqrt(1.25)
6010   penUp()
6020   right(90)
6030   forward((c+b)/2.0 + c) : REM color = ffffff
6040   penDown()
6050   REM Counterclockwise draw 3 edges of a square with edge length c 
6060   REM in the colour endcoded by colorNo 
6070   CALL polygonPart(c, 4, true, 3, colorNo)
6080   left(90)
6090   CALL forward(c/2.0, colorNo)
6100   right(90)
6110   CALL forward(c, colorNo)
6120   left(180 - rotAngle)
6130   CALL forward(hypo, colorNo)
6140   penUp()
6150   right(90 - rotAngle)
6160   forward((c + b)/2.0) : REM color = ffffff
6170   left(90)
6180   penDown()
6190 END SUB
6200 REM  
6210 REM Draws digit 2 in the colour specified by colorNo with font height h 
6220 REM from the current turtle position. 
6230 REM TODO: Add type-specific suffixes where necessary! 
6240 SUB digit2(h, colorNo)
6250   REM TODO: add the respective type suffixes to your variable names if required 
6260   REM  
6270   REM  
6280   REM Octagon edge length 
6290   b <- h * 0.5 / (sqrt(2.0) + 1)
6300   REM Cathetus of the corner triangle outside the octagon 
6310   c <- b / sqrt(2.0)
6320   angle <- toDegrees(atan(h/(h + 2*c)))
6330   penUp()
6340   forward(h - c) : REM color = ffffff
6350   penDown()
6360   REM Clockwise draw 4 edges of an octagon with edge length b 
6370   REM in the colour endcoded by colorNo 
6380   CALL polygonPart(b, 8, false, 4, colorNo)
6390   right(angle)
6400   CALL forward(h/2.0 * sqrt(1 + sqr(1+2*c/h)), colorNo)
6410   left(90 + angle)
6420   CALL forward(h/2.0, colorNo)
6430   left(90)
6440 END SUB
6450 REM  
6460 REM Draws digit 3 in the colour specified by colorNo with font height h 
6470 REM from the current turtle position. 
6480 REM TODO: Add type-specific suffixes where necessary! 
6490 SUB digit3(h, colorNo)
6500   REM TODO: add the respective type suffixes to your variable names if required 
6510   REM  
6520   REM  
6530   REM Octagon edge length 
6540   b <- h * 0.5 / (sqrt(2.0) + 1)
6550   REM Cathetus of the corner triangle outside the octagon 
6560   c <- b / sqrt(2.0)
6570   penUp()
6580   forward(c) : REM color = ffffff
6590   penDown()
6600   right(180)
6610   REM Counterclockwise draw 6 edges of an octagon with edge length b 
6620   REM in the colour endcoded by colorNo 
6630   CALL polygonPart(b, 8, true, 6, colorNo)
6640   penUp()
6650   left(180)
6660   forward(b) : REM color = ffffff
6670   penDown()
6680   REM Counterclockwise draw 5 edges of an octagon with edge length b 
6690   REM in the colour endcoded by colorNo 
6700   CALL polygonPart(b, 8, true, 5, colorNo)
6710   penUp()
6720   left(45)
6730   forward(h-c) : REM color = ffffff
6740   left(90)
6750   forward(h/2.0) : REM color = ffffff
6760   left(90)
6770   penDown()
6780 END SUB
6790 REM  
6800 REM Draws digit 5 in the colour specified by colorNo with font height h 
6810 REM from the current turtle position. 
6820 REM TODO: Add type-specific suffixes where necessary! 
6830 SUB digit5(h, colorNo)
6840   REM TODO: add the respective type suffixes to your variable names if required 
6850   REM  
6860   REM  
6870   REM Octagon edge length 
6880   b <- h * 0.5 / (sqrt(2.0) + 1)
6890   REM Cathetus of the corner triangle outside the octagon 
6900   c <- b / sqrt(2.0)
6910   penUp()
6920   forward(c) : REM color = ffffff
6930   penDown()
6940   right(180)
6950   REM Counterclockwise draw 6 edges of an octagon with edge length b 
6960   REM in the colour endcoded by colorNo 
6970   CALL polygonPart(b, 8, true, 6, colorNo)
6980   CALL forward(c, colorNo)
6990   REM Clockwise draw 2 edges of an octagon with edge length b 
7000   REM in the colour endcoded by colorNo 
7010   CALL polygonPart(h/2.0, 4, false, 2, colorNo)
7020   penUp()
7030   left(90)
7040   backward(h) : REM color = ffffff
7050   penDown()
7060 END SUB
7070 REM  
7080 REM Draws digit 6 in the colour specified by colorNo with font height h 
7090 REM from the current turtle position. 
7100 REM TODO: Add type-specific suffixes where necessary! 
7110 SUB digit6(h, colorNo)
7120   REM TODO: add the respective type suffixes to your variable names if required 
7130   REM  
7140   REM  
7150   REM Octagon edge length 
7160   b <- h * 0.5 / (sqrt(2.0) + 1)
7170   REM Cathetus of the corner triangle outside the octagon 
7180   c <- b / sqrt(2.0)
7190   penUp()
7200   forward(c) : REM color = ffffff
7210   penDown()
7220   right(180)
7230   REM Counterclockwise draw all 8 edges of an octagon with edge length b 
7240   REM in the colour endcoded by colorNo 
7250   CALL polygonPart(b, 8, true, 8, colorNo)
7260   penUp()
7270   left(180)
7280   forward(b) : REM color = ffffff
7290   penDown()
7300   CALL forward(2 * c + b, colorNo)
7310   REM Clockwise draw 3 edges of an octagon with edge length b 
7320   REM in the colour endcoded by colorNo 
7330   CALL polygonPart(b, 8, false, 3, colorNo)
7340   penUp()
7350   left(135)
7360   backward(h-c) : REM color = ffffff
7370   penDown()
7380 END SUB
7390 REM  
7400 REM Draws digit 8 in the colour specified by colorNo with font height h 
7410 REM from the current turtle position. 
7420 REM TODO: Add type-specific suffixes where necessary! 
7430 SUB digit8(h, colorNo)
7440   REM TODO: add the respective type suffixes to your variable names if required 
7450   REM  
7460   REM  
7470   REM Octagon edge length 
7480   b <- h * 0.5 / (sqrt(2.0) + 1)
7490   REM Cathetus of the corner triangle outside the octagon 
7500   c <- b / sqrt(2.0)
7510   penUp()
7520   forward(c) : REM color = ffffff
7530   penDown()
7540   right(180)
7550   REM Counterclockwise draw all 8 edges of an octagon with edge length b 
7560   REM in the colour endcoded by colorNo 
7570   CALL polygonPart(b, 8, true, 8, colorNo)
7580   penUp()
7590   left(180)
7600   forward(b) : REM color = ffffff
7610   right(45)
7620   forward(b) : REM color = ffffff
7630   left(135)
7640   penDown()
7650   REM Clockwise draw 7 edges of an octagon with edge length b 
7660   REM in the colour endcoded by colorNo 
7670   CALL polygonPart(b, 8, false, 7, colorNo)
7680   penUp()
7690   left(45)
7700   forward(h/2.0) : REM color = ffffff
7710   left(90)
7720   forward(c) : REM color = ffffff
7730   left(90)
7740   penDown()
7750 END SUB
7760 REM  
7770 REM Draws digit 9 in the colour specified by colorNo with font height h 
7780 REM from the current turtle position. 
7790 REM TODO: Add type-specific suffixes where necessary! 
7800 SUB digit9(h, colorNo)
7810   REM TODO: add the respective type suffixes to your variable names if required 
7820   REM  
7830   REM  
7840   REM Octagon edge length 
7850   b <- h * 0.5 / (sqrt(2.0) + 1)
7860   REM Cathetus of the corner triangle outside the octagon 
7870   c <- b / sqrt(2.0)
7880   penUp()
7890   forward(c) : REM color = ffffff
7900   penDown()
7910   right(180)
7920   REM Counterclockwise draw 4 edges of an octagon with edge length b 
7930   REM in the colour endcoded by colorNo 
7940   CALL polygonPart(b, 8, true, 4, colorNo)
7950   CALL forward(2 * c + b, colorNo)
7960   REM Counterclockwise draw 7 edges of an octagon with edge length b 
7970   REM in the colour endcoded by colorNo 
7980   CALL polygonPart(b, 8, true, 7, colorNo)
7990   penUp()
8000   left(45)
8010   backward(h/2.0 + c) : REM color = ffffff
8020   penDown()
8030 END SUB
8040 REM  
8050 REM Draws an exclamation mark in the colour encoded by colorNo with font height h 
8060 REM from the current turtle position. 
8070 REM TODO: Add type-specific suffixes where necessary! 
8080 SUB exclMk(h, colorNo)
8090   REM TODO: add the respective type suffixes to your variable names if required 
8100   REM  
8110   REM  
8120   REM Octagon edge length 
8130   b <- h * 0.5 / (sqrt(2.0) + 1)
8140   REM Cathetus of the outer corner triangle of the octagon 
8150   c <- b / sqrt(2.0)
8160   width <- h/2.0
8170   length1 <- h - (b+c)/2.0
8180   length2 <- length1 - 2*c
8190   hypo <- sqrt(width*width/16.0 + length2*length2)
8200   REM 360Â°/8 
8210   rotAngle <- 45
8220   rotAngle2 <- toDegrees(atan(width/4.0/length2))
8230   penUp()
8240   forward(length1) : REM color = ffffff
8250   right(90)
8260   forward(width/2.0) : REM color = ffffff
8270   left(90 + rotAngle)
8280   penDown()
8290   REM Clockwise draw 5 edges of an octagon with edge length b/2 
8300   REM in the colour endcoded by colorNo 
8310   CALL polygonPart(b/2.0, 8, false, 5, colorNo)
8320   right(rotAngle2)
8330   CALL forward(hypo, colorNo)
8340   left(2*rotAngle2)
8350   CALL forward(-hypo, colorNo)
8360   penUp()
8370   forward(hypo) : REM color = ffffff
8380   right(rotAngle2)
8390   forward(c) : REM color = ffffff
8400   left(90)
8410   forward(c/2.0) : REM color = ffffff
8420   penDown()
8430   REM Counterclockwise draw all 4 edges of a squarfe with edge length c 
8440   REM in the colour endcoded by colorNo 
8450   CALL polygonPart(c, 4, false, 4, colorNo)
8460   penUp()
8470   forward((c + b)/2.0) : REM color = ffffff
8480   left(90)
8490   backward(c) : REM color = ffffff
8500   penDown()
8510 END SUB
8520 REM  
8530 REM Draws a full stop in colour specified by colorNo with font height h 
8540 REM from the current turtle position. 
8550 REM TODO: Add type-specific suffixes where necessary! 
8560 SUB fullSt(h, colorNo)
8570   REM TODO: add the respective type suffixes to your variable names if required 
8580   REM  
8590   REM  
8600   REM Octagon edge length 
8610   b <- h * 0.5 / (sqrt(2.0) + 1)
8620   REM Cathetus of the outer corner triangle of the octagon 
8630   c <- b / sqrt(2.0)
8640   penUp()
8650   right(90)
8660   forward((c+b)/2.0 + c) : REM color = ffffff
8670   penDown()
8680   REM Counterclockwise draw all 4 edges of a squarfe with edge length c 
8690   REM in the colour endcoded by colorNo 
8700   CALL polygonPart(c, 4, true, 4, colorNo)
8710   penUp()
8720   forward((c + b)/2.0) : REM color = ffffff
8730   left(90)
8740   penDown()
8750 END SUB
8760 REM  
8770 REM Draws letter Ã in colour specified by colorNo with font height h 
8780 REM from the current turtle position. 
8790 REM TODO: Add type-specific suffixes where necessary! 
8800 SUB letterAe(h, colorNo)
8810   REM TODO: add the respective type suffixes to your variable names if required 
8820   REM  
8830   REM  
8840   penUp()
8850   forward(h) : REM color = ffffff
8860   penDown()
8870   REM Clockwise draw all 4 edges of a square with edge length h/16 
8880   REM in the colour endcoded by colorNo 
8890   CALL polygonPart(max(h/16.0,1), 4, false, 4, colorNo)
8900   right(90)
8910   penUp()
8920   forward(h/2.0) : REM color = ffffff
8930   penDown()
8940   REM Clockwise draw all 4 edges of a square with edge length h/16 
8950   REM in the colour endcoded by colorNo 
8960   CALL polygonPart(max(h/16.0,1), 4, false, 4, colorNo)
8970   right(90)
8980   penUp()
8990   forward(h) : REM color = ffffff
9000   right(90)
9010   forward(h/2.0) : REM color = ffffff
9020   penDown()
9030   right(90)
9040   CALL letterA(h, colorNo)
9050 END SUB
9060 REM  
9070 REM Draws letter B in colour specified by colorNo with font height h 
9080 REM from the current turtle position. 
9090 REM TODO: Add type-specific suffixes where necessary! 
9100 SUB letterB(h, colorNo)
9110   REM TODO: add the respective type suffixes to your variable names if required 
9120   REM  
9130   REM  
9140   REM Octagon edge length 
9150   b <- h * 0.5 / (sqrt(2.0) + 1)
9160   REM Cathetus of the outer corner triangle of the octagon 
9170   c <- b / sqrt(2.0)
9180   CALL forward(h, colorNo)
9190   right(90)
9200   CALL forward(c+b, colorNo)
9210   REM Clockwise draw 4 edges of an octagon with edge length b 
9220   CALL polygonPart(b, 8, false, 4, colorNo)
9230   CALL forward(c, colorNo)
9240   penUp()
9250   left(180)
9260   forward(b + c) : REM color = ffffff
9270   penDown()
9280   REM Clockwise draw 4 edges of an octagon with edge length b 
9290   CALL polygonPart(b, 8, false, 4, colorNo)
9300   CALL forward(c, colorNo)
9310   penUp()
9320   left(180)
9330   forward(b + 2*c) : REM color = ffffff
9340   penDown()
9350   left(90)
9360 END SUB
9370 REM  
9380 REM Draws letter C in the colour encoded by colorNo with font height h 
9390 REM from the current turtle position. 
9400 REM TODO: Add type-specific suffixes where necessary! 
9410 SUB letterC(h, colorNo)
9420   REM TODO: add the respective type suffixes to your variable names if required 
9430   REM  
9440   REM  
9450   REM Octagon edge length 
9460   b <- h * 0.5 / (sqrt(2.0) + 1)
9470   REM Cathetus of the outer triangle at the octagon corner 
9480   c <- b / sqrt(2.0)
9490   REM 360Â°/8 
9500   rotAngle <- 45
9510   penUp()
9520   forward(c) : REM color = ffffff
9530   penDown()
9540   right(180)
9550   REM Clockwise draws 3 edges of an octagon with edge length b in the colour 
9560   REM encoded by colorNo 
9570   CALL polygonPart(b, 8, true, 3, colorNo)
9580   left(rotAngle)
9590   penUp()
9600   forward(2*b + 2*c) : REM color = ffffff
9610   penDown()
9620   REM Counterclockwise draws 4 edges of an octagon with edge length b 
9630   REM iin the colour encoded by colorNo 
9640   CALL polygonPart(b, 8, true, 4, colorNo)
9650   CALL forward(b + 2*c, colorNo)
9660   penUp()
9670   forward(c) : REM color = ffffff
9680   left(90)
9690   CALL forward(b + 2*c, colorNo)
9700   penDown()
9710   left(90)
9720 END SUB
9730 REM  
9740 REM Draws letter D in colour specified by colorNo with font height h 
9750 REM from the current turtle position. 
9760 REM TODO: Add type-specific suffixes where necessary! 
9770 SUB letterD(h, colorNo)
9780   REM TODO: add the respective type suffixes to your variable names if required 
9790   REM  
9800   REM  
9810   REM Octagon edge length 
9820   b <- h * 0.5 / (sqrt(2.0) + 1)
9830   REM Cathetus of the outer corner triangle of the octagon 
9840   c <- b / sqrt(2.0)
9850   CALL forward(h, colorNo)
9860   right(90)
9870   CALL forward(c+b, colorNo)
9880   REM Clockwise draw 2 edges of an octagon with edge length b in the colour 
9890   REM encoded by colorNo 
9900   CALL polygonPart(b, 8, false, 2, colorNo)
9910   CALL forward(b + 2*c, colorNo)
9920   REM Clockwise draw 2 edges of an octagon with edge length b in the colour 
9930   REM encoded by colorNo 
9940   CALL polygonPart(b, 8, false, 2, colorNo)
9950   CALL forward(c, colorNo)
9960   penUp()
9970   left(180)
9980   forward(b + 2*c) : REM color = ffffff
9990   penDown()
10000   left(90)
10010 END SUB
10020 REM  
10030 REM Draws letter G in colour specified by colorNo with font height h 
10040 REM from the current turtle position. 
10050 REM TODO: Add type-specific suffixes where necessary! 
10060 SUB letterG(h, colorNo)
10070   REM TODO: add the respective type suffixes to your variable names if required 
10080   REM  
10090   REM  
10100   REM Octagon edge length 
10110   b <- h * 0.5 / (sqrt(2.0) + 1)
10120   REM Cathetus of the corner triangle outside the octagon. 
10130   c <- b / sqrt(2.0)
10140   penUp()
10150   forward(c) : REM color = ffffff
10160   penDown()
10170   right(180)
10180   REM Counterclockwise draw 4 edges of an octagon with edge length b in 
10190   REM the colour encoded by colorNo 
10200   CALL polygonPart(b, 8, true, 4, colorNo)
10210   CALL forward(c, colorNo)
10220   left(90)
10230   CALL forward(b/2.0 + c, colorNo)
10240   penUp()
10250   backward(b/2.0 + c) : REM color = ffffff
10260   right(90)
10270   forward(b + c) : REM color = ffffff
10280   penDown()
10290   REM Counterclockwise draw 4 edges of an octagon with edge length b in 
10300   REM the colour encoded by colorNo 
10310   CALL polygonPart(b, 8, true, 4, colorNo)
10320   CALL forward(b + 2*c, colorNo)
10330   penUp()
10340   forward(c) : REM color = ffffff
10350   left(90)
10360   CALL forward(b + 2*c, colorNo)
10370   penDown()
10380   left(90)
10390 END SUB
10400 REM  
10410 REM Draws letter J in colour encoded by colorNo with font height h 
10420 REM from the current turtle position. 
10430 REM TODO: Add type-specific suffixes where necessary! 
10440 SUB letterJ(h, colorNo)
10450   REM TODO: add the respective type suffixes to your variable names if required 
10460   REM  
10470   REM  
10480   REM Octagon edge length 
10490   b <- h * 0.5 / (sqrt(2.0) + 1)
10500   REM Cathetus of the outer corner triangle of the octagon 
10510   c <- b / sqrt(2.0)
10520   REM 360Â°/8 
10530   rotAngle <- 45
10540   penUp()
10550   forward(c) : REM color = ffffff
10560   penDown()
10570   right(180)
10580   REM Counterclockwise draw 3 edges of an octagon with edge length b in 
10590   REM the colour encoded by colorNo 
10600   CALL polygonPart(b, 8, true, 3, colorNo)
10610   left(rotAngle)
10620   CALL forward(h - c, colorNo)
10630   penUp()
10640   backward(h) : REM color = ffffff
10650   penDown()
10660 END SUB
10670 REM  
10680 REM Draws letter O in colour specified by colorNo with font height h 
10690 REM from the current turtle position. 
10700 REM TODO: Add type-specific suffixes where necessary! 
10710 SUB letterO(h, colorNo)
10720   REM TODO: add the respective type suffixes to your variable names if required 
10730   REM  
10740   REM  
10750   REM Octagon edge length 
10760   b <- h * 0.5 / (sqrt(2.0) + 1)
10770   REM Cathetus of the corner triangle outside the octagon 
10780   c <- b / sqrt(2.0)
10790   penUp()
10800   forward(c) : REM color = ffffff
10810   penDown()
10820   right(180)
10830   REM Counterclockwise draw 4 edges of an octagon with edge length b 
10840   REM in the colour endcoded by colorNo 
10850   CALL polygonPart(b, 8, true, 4, colorNo)
10860   CALL forward(b + 2*c, colorNo)
10870   REM Counterclockwise draw 4 edges of an octagon with edge length b 
10880   REM in the colour endcoded by colorNo 
10890   CALL polygonPart(b, 8, true, 4, colorNo)
10900   CALL forward(b + 2*c, colorNo)
10910   penUp()
10920   forward(c) : REM color = ffffff
10930   left(90)
10940   forward(b + 2*c) : REM color = ffffff
10950   penDown()
10960   left(90)
10970 END SUB
10980 REM  
10990 REM Draws letter P in colour specified by colorNo with font height h 
11000 REM from the current turtle position. 
11010 REM TODO: Add type-specific suffixes where necessary! 
11020 SUB letterP(h, colorNo)
11030   REM TODO: add the respective type suffixes to your variable names if required 
11040   REM  
11050   REM  
11060   REM Octagon edge length 
11070   b <- h * 0.5 / (sqrt(2.0) + 1)
11080   REM Cathetus of the corner triangle outside the octagon 
11090   c <- b / sqrt(2.0)
11100   CALL forward(h, colorNo)
11110   right(90)
11120   CALL forward(c+b, colorNo)
11130   REM Clockwise draw 4 edges of an octagon with edge length b 
11140   REM in the colour endcoded by colorNo 
11150   CALL polygonPart(b, 8, false, 4, colorNo)
11160   CALL forward(c, colorNo)
11170   penUp()
11180   backward(b + 2*c) : REM color = ffffff
11190   left(90)
11200   forward(b + 2*c) : REM color = ffffff
11210   penDown()
11220   left(180)
11230 END SUB
11240 REM  
11250 REM Draws letter Q in colour specified by colorNo with font height h 
11260 REM from the current turtle position. 
11270 REM TODO: Add type-specific suffixes where necessary! 
11280 SUB letterQ(h, colorNo)
11290   REM TODO: add the respective type suffixes to your variable names if required 
11300   REM  
11310   REM  
11320   REM Octagon edge length 
11330   b <- h * 0.5 / (sqrt(2.0) + 1)
11340   REM Cathetus of the outer corner triangle of the octagon 
11350   c <- b / sqrt(2.0)
11360   REM 360Â°/8 
11370   rotAngle <- 45
11380   penUp()
11390   forward(c) : REM color = ffffff
11400   penDown()
11410   right(180)
11420   REM Counterclockwise draw 4 edges of an octagon with edge length b 
11430   REM in the colour endcoded by colorNo 
11440   CALL polygonPart(b, 8, true, 4, colorNo)
11450   CALL forward(b + 2*c, colorNo)
11460   REM Counterclockwise draw 4 edges of an octagon with edge length b 
11470   REM in the colour endcoded by colorNo 
11480   CALL polygonPart(b, 8, true, 4, colorNo)
11490   CALL forward(b + 2*c, colorNo)
11500   penUp()
11510   forward(c) : REM color = ffffff
11520   left(90)
11530   forward(b + 2*c) : REM color = ffffff
11540   right(rotAngle)
11550   backward(b) : REM color = ffffff
11560   penDown()
11570   CALL forward(b, colorNo)
11580   left(90 + rotAngle)
11590 END SUB
11600 REM  
11610 REM Zeichnet den Buchstaben R von der Turtleposition aus 
11620 REM mit ZeilenhÃ¶he h 
11630 REM TODO: Add type-specific suffixes where necessary! 
11640 SUB letterR(h, colorNo)
11650   REM TODO: add the respective type suffixes to your variable names if required 
11660   REM  
11670   REM  
11680   REM Octagon edge length 
11690   b <- h * 0.5 / (sqrt(2.0) + 1)
11700   REM Cathetus of the outer corner triangle of the octagon 
11710   c <- b / sqrt(2.0)
11720   REM 360Â°/8 
11730   rotAngle <- 45
11740   CALL forward(h, colorNo)
11750   right(90)
11760   CALL forward(c+b, colorNo)
11770   REM Clockwise draw 4 edges of an octagon with edge length b 
11780   REM in the colour endcoded by colorNo 
11790   CALL polygonPart(b, 8, false, 4, colorNo)
11800   CALL forward(c, colorNo)
11810   left(90 + rotAngle)
11820   CALL forward(sqrt(2.0)*(b + 2*c), colorNo)
11830   left(90 + rotAngle)
11840 END SUB
11850 REM  
11860 REM Draws letter S in colour specified by colorNo with font height h 
11870 REM from the current turtle position. 
11880 REM TODO: Add type-specific suffixes where necessary! 
11890 SUB letterS(h, colorNo)
11900   REM TODO: add the respective type suffixes to your variable names if required 
11910   REM  
11920   REM  
11930   REM Octagon edge length 
11940   b <- h * 0.5 / (sqrt(2.0) + 1)
11950   REM Side length of the (outer) corner triangle of the octagon 
11960   c <- b / sqrt(2.0)
11970   REM 360Â°/8 
11980   rotAngle <- 45
11990   penUp()
12000   forward(c) : REM color = ffffff
12010   penDown()
12020   right(180)
12030   REM Counterclockwise draw 6 edges of an octagon with edge length b 
12040   REM in the colour encoded by colorNo 
12050   CALL polygonPart(b, 8, true, 6, colorNo)
12060   REM Clockwise draw 5 edges of an octagon with edge length b 
12070   REM in the colour encoded by colorNo 
12080   CALL polygonPart(b, 8, false, 5, colorNo)
12090   right(rotAngle)
12100   penUp()
12110   forward(2*b + 3*c) : REM color = ffffff
12120   penDown()
12130   left(180)
12140 END SUB
12150 REM  
12160 REM Draws letter U in colour specified by colorNo with font height h 
12170 REM from the current turtle position. 
12180 REM TODO: Add type-specific suffixes where necessary! 
12190 SUB letterU(h, colorNo)
12200   REM TODO: add the respective type suffixes to your variable names if required 
12210   REM  
12220   REM  
12230   REM edge length of a regular octagon 
12240   b <- h * 0.5 / (sqrt(2.0) + 1)
12250   REM Cathetus of the outer corner triangle of the octagon 
12260   c <- b / sqrt(2.0)
12270   REM 360Â°/8 
12280   rotAngle <- 45
12290   penUp()
12300   forward(c) : REM color = ffffff
12310   penDown()
12320   CALL forward(h - c, colorNo)
12330   penUp()
12340   backward(h-c) : REM color = ffffff
12350   penDown()
12360   right(180)
12370   REM Counterclockwise draw 3 edges of an octagoin with edge length b in colour specified by colorNo 
12380   CALL polygonPart(b, 8, true, 3, colorNo)
12390   left(rotAngle)
12400   CALL forward(h - c, colorNo)
12410   penUp()
12420   backward(h) : REM color = ffffff
12430   penDown()
12440 END SUB
12450 REM  
12460 REM Draws a question mark in colour specified by colorNo with font height h 
12470 REM from the current turtle position. 
12480 REM TODO: Add type-specific suffixes where necessary! 
12490 SUB qstnMk(h, colorNo)
12500   REM TODO: add the respective type suffixes to your variable names if required 
12510   REM  
12520   REM  
12530   REM Octagon edge length 
12540   b <- h * 0.5 / (sqrt(2.0) + 1)
12550   REM Cathetus of the outer corner triangle of the octagon 
12560   c <- b / sqrt(2.0)
12570   REM 360Â°/8 
12580   rotAngle <- 45
12590   penUp()
12600   forward(h-c) : REM color = ffffff
12610   penDown()
12620   REM Counterclockwise draw 5 edges of an octagon with edge length b 
12630   REM in the colour endcoded by colorNo 
12640   CALL polygonPart(b, 8, false, 5, colorNo)
12650   CALL forward(c, colorNo)
12660   left(rotAngle)
12670   CALL forward(b/2.0, colorNo)
12680   penUp()
12690   forward(c) : REM color = ffffff
12700   left(90)
12710   forward(c/2.0) : REM color = ffffff
12720   penDown()
12730   REM Counterclockwise draw all 4 edges of a squarfe with edge length c 
12740   REM in the colour endcoded by colorNo 
12750   CALL polygonPart(c, 4, false, 4, colorNo)
12760   penUp()
12770   forward((c + b)/2.0) : REM color = ffffff
12780   left(90)
12790   backward(c) : REM color = ffffff
12800   penDown()
12810 END SUB
12820 REM  
12830 REM Draws digit 0 in the colour specified by colorNo with font height h 
12840 REM from the current turtle position. 
12850 REM TODO: Add type-specific suffixes where necessary! 
12860 SUB digit0(h, colorNo)
12870   REM TODO: add the respective type suffixes to your variable names if required 
12880   REM  
12890   REM  
12900   penUp()
12910   forward(h/4.0) : REM color = ffffff
12920   penDown()
12930   right(45)
12940   len <- h/sqrt(2)
12950   CALL forward(len, colorNo)
12960   penUp()
12970   backward(len) : REM color = ffffff
12980   left(45)
12990   backward(h/4.0) : REM color = ffffff
13000   CALL letterO(h, colorNo)
13010 END SUB
13020 REM  
13030 REM Draws letter Ã in colour specified by colorNo with font height h 
13040 REM from the current turtle position. 
13050 REM TODO: Add type-specific suffixes where necessary! 
13060 SUB letterOe(h, colorNo)
13070   REM TODO: add the respective type suffixes to your variable names if required 
13080   REM  
13090   REM  
13100   penUp()
13110   forward(h) : REM color = ffffff
13120   penDown()
13130   right(90)
13140   REM Clockwise draw all 4 edges of a square with edge length h/8 
13150   REM in the colour endcoded by colorNo 
13160   CALL polygonPart(h/8, 4, false, 4, colorNo)
13170   penUp()
13180   forward(h/2) : REM color = ffffff
13190   penDown()
13200   right(90)
13210   REM Clockwise draw all 4 edges of a square with edge length h/8 
13220   REM in the colour endcoded by colorNo 
13230   CALL polygonPart(h/8, 4, false, 4, colorNo)
13240   penUp()
13250   forward(h) : REM color = ffffff
13260   penDown()
13270   right(90)
13280   penUp()
13290   forward(h/2) : REM color = ffffff
13300   penDown()
13310   right(90)
13320   CALL letterO(h, colorNo)
13330 END SUB
13340 REM  
13350 REM Draws letter Ã in colour specified by colorNo with font height h 
13360 REM from the current turtle position. 
13370 REM TODO: Add type-specific suffixes where necessary! 
13380 SUB letterUe(h, colorNo)
13390   REM TODO: add the respective type suffixes to your variable names if required 
13400   REM  
13410   REM  
13420   penUp()
13430   forward(h) : REM color = ffffff
13440   right(90)
13450   forward(max(h/8,1)) : REM color = ffffff
13460   penDown()
13470   REM Clockwise draw all 4 edges of a square with edge length h/16 
13480   REM in the colour endcoded by colorNo 
13490   CALL polygonPart(max(h/16,1), 4, false, 4, colorNo)
13500   penUp()
13510   forward(h/2 - 2 * max(h/8,1) - max(h/16, 1)) : REM color = ffffff
13520   penDown()
13530   REM Clockwise draw all 4 edges of a square with edge length h/16 
13540   REM in the colour endcoded by colorNo 
13550   CALL polygonPart(max(h/16,1), 4, false, 4, colorNo)
13560   penUp()
13570   forward(max(h/8,1)) : REM color = ffffff
13580   penDown()
13590   right(90)
13600   penUp()
13610   forward(h) : REM color = ffffff
13620   right(90)
13630   forward(h/2) : REM color = ffffff
13640   penDown()
13650   right(90)
13660   CALL letterU(h, colorNo)
13670 END SUB
13680 REM  
13690 REM Has the turtle draw the given string 'textÂ´ with font height 'hÂ´ (in 
13700 REM pixels) and the colour coded by integer 'cÂ´ from the current Turtle 
13710 REM position to the Turtle canvas. If the turtle looks North then 
13720 REM the text will be written rightwards. In the event, the turtle will be 
13730 REM placed behind the text in original orientation (such that the next text 
13740 REM would be written like a continuation. Colour codes: 
13750 REM 1 = black 
13760 REM 2 = red 
13770 REM 3 = yellow 
13780 REM 4 = green 
13790 REM 5 = cyan 
13800 REM 6 = blue 
13810 REM 7 = pink 
13820 REM 8 = grey 
13830 REM 9 = orange 
13840 REM 10 = violet 
13850 REM All letters (ASCII) will be converted to uppercase, 
13860 REM the set of representable special characters is: decimal digits, 
13870 REM '.', ',', '!', '?', 'Ã', 'Ã', 'Ã'. Other characters will be shown as a small 
13880 REM centred square (dummy character). 
13890 REM TODO: Add type-specific suffixes where necessary! 
13900 SUB drawText(text AS String, h AS integer, c AS integer)
13910   REM TODO: add the respective type suffixes to your variable names if required 
13920   REM  
13930   REM  
13940   gap <- h/10.0
13950   FOR k = 1 TO length(text)
13960     letter <- uppercase(copy(text, k, 1))
13970     SELECT CASE letter
13980       CASE "A"
13990         CALL letterA(h,c)
14000       CASE "B"
14010         CALL letterB(h,c)
14020       CASE "C"
14030         CALL letterC(h,c)
14040       CASE "D"
14050         CALL letterD(h,c)
14060       CASE "E"
14070         CALL letterE(h,c)
14080       CASE "F"
14090         CALL letterF(h,c)
14100       CASE "G"
14110         CALL letterG(h,c)
14120       CASE "H"
14130         CALL letterH(h,c)
14140       CASE "I"
14150         CALL letterI(h,c)
14160       CASE "J"
14170         CALL letterJ(h,c)
14180       CASE "K"
14190         CALL letterK(h,c)
14200       CASE "L"
14210         CALL letterL(h,c)
14220       CASE "M"
14230         CALL letterM(h,c)
14240       CASE "N"
14250         CALL letterN(h,c)
14260       CASE "O"
14270         CALL letterO(h,c)
14280       CASE "P"
14290         CALL letterP(h,c)
14300       CASE "Q"
14310         CALL letterQ(h,c)
14320       CASE "R"
14330         CALL letterR(h,c)
14340       CASE "S"
14350         CALL letterS(h,c)
14360       CASE "T"
14370         CALL letterT(h,c)
14380       CASE "U"
14390         CALL letterU(h,c)
14400       CASE "V"
14410         CALL letterV(h,c)
14420       CASE "W"
14430         CALL letterW(h,c)
14440       CASE "X"
14450         CALL letterX(h,c)
14460       CASE "Y"
14470         CALL letterY(h,c)
14480       CASE "Z"
14490         CALL letterZ(h,c)
14500       CASE " "
14510         CALL blank(h,c)
14520       CASE "!"
14530         CALL exclMk(h,c)
14540       CASE "?"
14550         CALL qstnMk(h,c)
14560       CASE "."
14570         CALL fullSt(h,c)
14580       CASE ","
14590         CALL comma(h,c)
14600       CASE "Ã"
14610         CALL letterAe(h,c)
14620       CASE "Ã"
14630         CALL letterOe(h,c)
14640       CASE "Ã"
14650         CALL letterUe(h,c)
14660       CASE "0"
14670         CALL digit0(h,c)
14680       CASE "1"
14690         CALL digit1(h,c)
14700       CASE "2"
14710         CALL digit2(h,c)
14720       CASE "3"
14730         CALL digit3(h,c)
14740       CASE "4"
14750         CALL digit4(h,c)
14760       CASE "5"
14770         CALL digit5(h,c)
14780       CASE "6"
14790         CALL digit6(h,c)
14800       CASE "7"
14810         CALL digit7(h,c)
14820       CASE "8"
14830         CALL digit8(h,c)
14840       CASE "9"
14850         CALL digit9(h,c)
14860       CASE ELSE
14870         CALL charDummy(h,c)
14880     END SELECT
14890     right(90)
14900     penUp()
14910     forward(gap) : REM color = ffffff
14920     penDown()
14930     left(90)
14940   NEXT k
14950 END SUB

REM = = = = 8< = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 

