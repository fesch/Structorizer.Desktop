10 REM Several declaration and initialisation variants for test of Analyser, Executor, and Generators 
20 REM Generated by Structorizer 3.32-32 
30 
40 REM Copyright (C) 2017-09-18 Kay GÃ¼rtzig 
50 REM License: GPLv3-link 
60 REM GNU General Public License (V 3) 
70 REM https://www.gnu.org/licenses/gpl.html 
80 REM http://www.gnu.de/documents/gpl.de.html 
90 
100 REM  
110 REM program DateTests563
120 REM TODO: add the respective type suffixes to your variable names if required 
130 
140 type Date = record{year: int; month, day: short}
150 var today: Date
160 
170 REM  
180 Date someDay <- Date{day: 24, month: 2, year: 2017}
190 nDays <- daysInMonth423(someDay)
200 today <- Date{2018, 7, 20}
210 type Person = record { name: string; birth: Date; test: array[3] of int;}
220 var me: Person <- Person{"roger", Date{1985, 3, 6}, {0, 8, 15}}
230 var declArray: array of double <- {9.0, 7.5, -6.4, 1.7, 0.0}
240 var explArray: double[3] <- {7.1, 0.5, -1.5}
250 double doof[3] <- {0.4}
260 double[2] dull <- {-12.7, 96.03}
270 values <- {47, 11}
280 END
290 REM  
300 REM Detects whether the given year is a leap year in the Gregorian calendar 
310 REM (extrapolated backwards beyonds its inauguration) 
320 REM TODO: Add type-specific suffixes where necessary! 
330 FUNCTION isLeapYear(year) AS boolean
340   REM TODO: add the respective type suffixes to your variable names if required 
350   REM  
360   REM  
370   REM Most years aren't leap years... 
380   isLeapYear <- false
390   IF (year mod 4 = 0) and (year mod 100 <> 0) THEN
400     REM This is a standard leap year 
410     isLeapYear <- true
420   ELSE
430     IF year mod 400 = 0 THEN
440       REM One of the rare leap years 
450       REM occurring every 400 years 
460       isLeapYear <- true
470     END IF
480   END IF
490   RETURN isLeapYear
500 END FUNCTION
510 REM  
520 REM Computes the number of days the given month (1..12) 
530 REM has in the the given year 
540 REM TODO: Add type-specific suffixes where necessary! 
550 FUNCTION daysInMonth423(aDate AS Date) AS Integer
560   REM TODO: add the respective type suffixes to your variable names if required 
570   REM  
580   REM  
590   REM select the case where illegal values are also considered 
600   SELECT CASE aDate.month
610     CASE 1, 3, 5, 7, 8, 10, 12
620       days <- 31
630     CASE 4, 6, 9, 11
640       days <- 30
650     CASE 2
660       REM Default value for February 
670       days <- 28
680       REM To make the call work it has to be done in 
690       REM a separate element (cannot be performed 
700       REM as part of the condition of an Alternative) 
710       isLeap <- isLeapYear(aDate.year)
720       IF isLeap THEN
730         days <- 29
740       END IF
750     CASE ELSE
760       REM This is the return value for illegal months. 
770       REM It is easy to check 
780       days <- 0
790   END SELECT
800   RETURN days
810 END FUNCTION

REM = = = = 8< = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 

