#!/usr/bin/python3
# -*- coding: utf-8 -*-
# TestMain 
# generated by Structorizer 3.32-32 

# Copyright (C) 2020-04-13 Kay Gürtzig 
# License: GPLv3-link 
# GNU General Public License (V 3) 
# https://www.gnu.org/licenses/gpl.html 
# http://www.gnu.de/documents/gpl.de.html 

from enum import Enum
import math
# BEGIN (global) code from included diagram "IncludeA" 
var a1: int
a2 <- "doof"
# END (global) code from included diagram "IncludeA" 
# BEGIN (global) code from included diagram "IncludeB" 
var b1: string
b2 <- 3.9
# END (global) code from included diagram "IncludeB" 

def testSub(c1, param2, b1) :
    d1 <- a1
    d2 <- a2
    a1 <- 15
    return length(a2 + b1) + math.floor(c1) * math.ceil(param2)

# = = = = 8< = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 

# Test for indirect and concurrent includes 
a1 <- 7
b1 <- a2 + " oder blöd"
c1 <- a1 * b2
c2 <- testSub(c1, a1 + b2, b1)
print(a1, " ", a2, " ", b1, " ", b2, sep='')

