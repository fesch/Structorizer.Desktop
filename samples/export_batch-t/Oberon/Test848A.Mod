(* Test for indirect and concurrent includes *)
MODULE TestMain;
(* Generated by Structorizer 3.32-31 *)
IMPORT Out;
VAR
  (* TODO: check and accomplish variable declarations *)
  a2*: ARRAY 100 OF CHAR;
  b2*: LONGREAL;

PROCEDURE testSub(c1, param2: REAL; VAR b1: ARRAY 100 OF CHAR): INTEGER;
BEGIN
  d1 <- a1;
  d2 <- a2;
  a1 <- 15;
  RETURN length(a2 + b1) + floor(c1) * ceil(param2);
END testSub;

(* = = = = 8< = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = *)

BEGIN
  Out.Open;
  (* BEGIN initialization for "IncludeA" *)
  var a1: int;
  a2 <- "doof";
  (* END initialization for "IncludeA" *)
  (* BEGIN initialization for "IncludeB" *)
  var b1: string;
  b2 <- 3.9;
  (* END initialization for "IncludeB" *)
  
  a1 <- 7;
  b1 <- a2 + " oder blÃ¶d";
  c1 <- a1 * b2;
  c2 <- testSub(c1, a1 + b2, b1);
  Out.Int(a1, 10);
  Out.String(" ");
  Out.String(a2);
  Out.String(" ");
  Out.String(b1);
  Out.String(" ");
  Out.Real(b2, 10);
  Out.Ln;
END TestMain.
