// Generated by Structorizer 3.32-25 

// Copyright (C) 2020-04-13 Kay Gürtzig 
// License: GPLv3-link 
// GNU General Public License (V 3) 
// https://www.gnu.org/licenses/gpl.html 
// http://www.gnu.de/documents/gpl.de.html 

/**
 * Test for indirect and concurrent includes
 */
public class TestMain {

	private static boolean initDone_IncludeA = false;
	private static String a2;
	private static int a1;

	private static boolean initDone_IncludeB = false;
	private static double b2;
	private static String b1;

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		initialize_IncludeA();
		initialize_IncludeB();
		
		// TODO: Check and accomplish variable declarations: 
		int c2;
		String a2;

		int a1 = 7;
		b1 = a2 + " oder blöd";
		??? c1 = a1 * b2;
		c2 = testSub(c1, a1 + b2, b1);
		System.out.println((a1) + (" ") + (a2) + (" ") + (b1) + (" ") + (b2));
	}

	/**
	 * Automatically created initialization procedure for IncludeA
	 */
	private static void initialize_IncludeA() {
		if (! initDone_IncludeA) {
			a2 = "doof";
			initDone_IncludeA = true;
		}
	}

	/**
	 * Automatically created initialization procedure for IncludeB
	 */
	private static void initialize_IncludeB() {
		if (! initDone_IncludeB) {
			b2 = 3.9;
			initDone_IncludeB = true;
		}
	}

	/**
	 * @param c1
	 * @param param2
	 * @param b1
	 * @return 
	 */
	private static int testSub(double c1, double param2, String b1) {
		initialize_IncludeA();
		
		// TODO: Check and accomplish variable declarations: 
		String d2;
		int d1;

		d1 = a1;
		d2 = a2;
		a1 = 15;
		return length(a2 + b1) + Math.floor(c1) * Math.ceil(param2);
	}

// = = = = 8< = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 


}
