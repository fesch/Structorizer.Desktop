10 REM Generated by Structorizer 3.32-26 
20 
30 REM Copyright (C) 2017-09-18 Kay GÃ¼rtzig 
40 REM License: GPLv3-link 
50 REM GNU General Public License (V 3) 
60 REM https://www.gnu.org/licenses/gpl.html 
70 REM http://www.gnu.de/documents/gpl.de.html 
80 
90 REM  
100 REM program DateTests563
110 REM TODO: add the respective type suffixes to your variable names if required 
120 DIM someDay AS Date
130 LET someDay.day = 24
140 LET someDay.month = 2
150 LET someDay.year = 2017
160 LET nDays = daysInMonth423(someDay)
170 DIM today AS Date
180 LET today.year = 2018
190 LET today.month = 7
200 LET today.day = 20
210 TYPE Person
220   name AS String
230   birth AS Date
240   test AS @int
250 END TYPE
260 DIM me AS Person
270 LET me.name = "roger"
280 LET me.birth = Date{1985, 3, 6}
290 LET me.test = {0, 8, 15}
300 REM TODO: Check indexBase value (automatically generated) 
310 LET indexBase = 0
320 LET declArray(indexBase + 0) = 9.0
330 LET declArray(indexBase + 1) = 7.5
340 LET declArray(indexBase + 2) = -6.4
350 LET declArray(indexBase + 3) = 1.7
360 LET declArray(indexBase + 4) = 0.0
370 REM TODO: Check indexBase value (automatically generated) 
380 LET indexBase = 0
390 LET explArray(indexBase + 0) = 7.1
400 LET explArray(indexBase + 1) = 0.5
410 LET explArray(indexBase + 2) = -1.5
420 REM TODO: Check indexBase value (automatically generated) 
430 LET indexBase = 0
440 LET doof(3)(indexBase + 0) = 0.4
450 REM TODO: Check indexBase value (automatically generated) 
460 LET indexBase = 0
470 LET values(indexBase + 0) = 47
480 LET values(indexBase + 1) = 11
490 END
500 REM  
510 REM Detects whether the given year is a leap year in the Gregorian calendar 
520 REM (extrapolated backwards beyonds its inauguration) 
530 REM TODO: Add type-specific suffixes where necessary! 
540 FUNCTION isLeapYear(year) AS boolean
550   REM TODO: add the respective type suffixes to your variable names if required 
560   REM Most years aren't leap years... 
570   LET isLeapYear = false
580   IF (year % 4 = 0) AND (year % 100 <> 0) THEN
590     REM This is a standard leap year 
600     LET isLeapYear = true
610   ELSE
620     IF year % 400 = 0 THEN
630       REM One of the rare leap years 
640       REM occurring every 400 years 
650       LET isLeapYear = true
660     END IF
670   END IF
680   RETURN isLeapYear
690 END FUNCTION
700 REM  
710 REM Computes the number of days the given month (1..12) 
720 REM has in the the given year 
730 REM TODO: Add type-specific suffixes where necessary! 
740 FUNCTION daysInMonth423(aDate AS Date) AS Integer
750   REM TODO: add the respective type suffixes to your variable names if required 
760   REM select the case where illegal values are also considered 
770   SELECT CASE aDate.month
780     CASE 1, 3, 5, 7, 8, 10, 12
790       LET days = 31
800     CASE 4, 6, 9, 11
810       LET days = 30
820     CASE 2
830       REM Default value for February 
840       LET days = 28
850       REM To make the call work it has to be done in 
860       REM a separate element (cannot be performed 
870       REM as part of the condition of an Alternative) 
880       LET isLeap = isLeapYear(aDate.year)
890       IF isLeap THEN
900         LET days = 29
910       END IF
920     CASE ELSE
930       REM This is the return value for illegal months. 
940       REM It is easy to check 
950       LET days = 0
960   END SELECT
970   return days
980 END FUNCTION

REM = = = = 8< = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 

