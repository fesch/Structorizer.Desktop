10 REM Several declaration and initialisation variants for test of Analyser, Executor, and Generators 
20 REM Generated by Structorizer 3.32-26 
30 
40 REM Copyright (C) 2017-09-18 Kay GÃ¼rtzig 
50 REM License: GPLv3-link 
60 REM GNU General Public License (V 3) 
70 REM https://www.gnu.org/licenses/gpl.html 
80 REM http://www.gnu.de/documents/gpl.de.html 
90 
100 REM  
110 REM program DateTests563
120 REM TODO: add the respective type suffixes to your variable names if required 
130 
140 TYPE Date
150   year AS Integer
160   month AS short
170   day AS short
180 END TYPE
190 DIM today AS Date
200 
210 TYPE Person
220   name AS String
230   birth AS Date
240   Dim test(2) AS Integer
250 END TYPE
260 DIM values(1) AS Integer
270 DIM someDay AS Date
280 DIM me AS Person
290 DIM explArray(2) AS double
300 DIM dull(1) AS double
310 DIM doof(2) AS double
320 DIM declArray() AS double
330 REM  
340 LET someDay.day = 24
350 LET someDay.month = 2
360 LET someDay.year = 2017
370 LET nDays = daysInMonth423(someDay)
380 LET today.year = 2018
390 LET today.month = 7
400 LET today.day = 20
410 LET me.name = "roger"
420 LET me.birth.year = 1985
430 LET me.birth.month = 3
440 LET me.birth.day = 6
450 LET me.test(0) = 0
460 LET me.test(1) = 8
470 LET me.test(2) = 15
480 LET declArray(0) = 9.0
490 LET declArray(1) = 7.5
500 LET declArray(2) = -6.4
510 LET declArray(3) = 1.7
520 LET declArray(4) = 0.0
530 LET explArray(0) = 7.1
540 LET explArray(1) = 0.5
550 LET explArray(2) = -1.5
560 LET doof(0) = 0.4
570 LET dull(0) = -12.7
580 LET dull(1) = 96.03
590 LET values(0) = 47
600 LET values(1) = 11
610 END
620 REM  
630 REM Detects whether the given year is a leap year in the Gregorian calendar 
640 REM (extrapolated backwards beyonds its inauguration) 
650 REM TODO: Add type-specific suffixes where necessary! 
660 FUNCTION isLeapYear(year) AS boolean
670   REM TODO: add the respective type suffixes to your variable names if required 
680   REM  
690   REM  
700   REM Most years aren't leap years... 
710   LET isLeapYear = false
720   IF (year % 4 = 0) AND (year % 100 <> 0) THEN
730     REM This is a standard leap year 
740     LET isLeapYear = true
750   ELSE
760     IF year % 400 = 0 THEN
770       REM One of the rare leap years 
780       REM occurring every 400 years 
790       LET isLeapYear = true
800     END IF
810   END IF
820   RETURN isLeapYear
830 END FUNCTION
840 REM  
850 REM Computes the number of days the given month (1..12) 
860 REM has in the the given year 
870 REM TODO: Add type-specific suffixes where necessary! 
880 FUNCTION daysInMonth423(aDate AS Date) AS Integer
890   REM TODO: add the respective type suffixes to your variable names if required 
900   REM  
910   REM  
920   REM select the case where illegal values are also considered 
930   SELECT CASE aDate.month
940     CASE 1, 3, 5, 7, 8, 10, 12
950       LET days = 31
960     CASE 4, 6, 9, 11
970       LET days = 30
980     CASE 2
990       REM Default value for February 
1000       LET days = 28
1010       REM To make the call work it has to be done in 
1020       REM a separate element (cannot be performed 
1030       REM as part of the condition of an Alternative) 
1040       LET isLeap = isLeapYear(aDate.year)
1050       IF isLeap THEN
1060         LET days = 29
1070       END IF
1080     CASE ELSE
1090       REM This is the return value for illegal months. 
1100       REM It is easy to check 
1110       LET days = 0
1120   END SELECT
1130   return days
1140 END FUNCTION

REM = = = = 8< = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 

