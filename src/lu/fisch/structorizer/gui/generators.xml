<?xml version="1.0" encoding="ISO-8859-1"?>
<plugins xmlns:nsd="http://structorizer.fisch.lu">

	<plugin title="Pascal / Delphi" class="lu.fisch.structorizer.generators.PasGenerator"       icon="" case_matters="0" reserved_words="and,array,begin,case,const,div,do,downto,else,end,file,for,function,goto,if,in,label,message,mod,nil,not,of,or,packed,procedure,program,record,repeat,set,shl,shr,then,to,type,until,var,while,with" />
	<plugin title="Oberon" 			class="lu.fisch.structorizer.generators.OberonGenerator"    icon="" reserved_words="ARRAY,BEGIN,BY,CASE,CONST,DIV,DO,ELSE,ELSIF,END,EXIT,FOR,IF,IMPORT,IN,IS,LOOP,MOD,MODULE,NIL,OF,OR,POINTER,PROCEDURE,RECORD,REPEAT,RETURN,THEN,TO,TYPE,UNTIL,VAR,WHILE,WITH,BOOLEAN,CHAR,FALSE,HALT,INTEGER,LONG,LONGINT,LONGREAL,NEW,REAL,SET,SHORT,SHORTINT,TRUE" />
	<plugin title="Perl" 			class="lu.fisch.structorizer.generators.PerlGenerator"      icon="" case_matters="0" reserved_words="and,cmp,continue,do,else,elsif,eq,exp,for,foreach,ge,gt,if,le,lock,lt,ne,no,or,package,qq,qr,qw,qx,sub,tr,unless,until,while,xor">
		<option type="Boolean" name="pragmaUseConstant" title="Export constants via pragma use constant" help="Translates constant definitions into 'use constant' lines rather than to produce simple variable assignments." default="false" />
	</plugin>
	<plugin title="ksh" 			class="lu.fisch.structorizer.generators.KSHGenerator"       icon="" reserved_words="if,then,else,elif,fi,select,case,in,esac,for,do,done,while,until,function,return" />
	<plugin title="bash" 			class="lu.fisch.structorizer.generators.BASHGenerator"      icon="" reserved_words="if,then,else,elif,fi,select,case,in,esac,for,do,done,while,until,function,return" />
	<plugin title="C" 				class="lu.fisch.structorizer.generators.CGenerator"         icon="" reserved_words="auto,break,case,char,const,continue,default,do,double,else,enum,extern,float,for,goto,if,int,long,register,return,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile,while" />
	<plugin title="C#" 				class="lu.fisch.structorizer.generators.CSharpGenerator"    icon="" reserved_words="abstract,as,base,bool,break,byte,case,catch,char,checked,class,const,continue,decimal,default,delegate,do,double,else,enum,event,explicit,extern,false,finally,fixed,float,for,foreach,goto,if,implicit,in,int,interface,internal,is,lock,long,namespace,new,null,object,operator,out,override,params,private,public,readonly,ref,return,sbyte,sealed,short,sizeof,stackalloc,static,string,struct,switch,this,throw,true,try,typeof,uint,ulong,unchecked,unsafe,ushort,using,virtual,void,volatile,while" />
	<plugin title="C++" 			class="lu.fisch.structorizer.generators.CPlusPlusGenerator" icon="" reserved_words="auto,break,case,char,const,continue,default,do,double,else,enum,extern,float,for,goto,if,int,long,register,return,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile,while,asm,bool,catch,calss,const_cast,delete,dynamic_cast,explicit,false,friend,inline,mutable,namespace,new,nullptr,operator,private,public,protected,reinterpret_cast,static_cast,template,this,throw,true,try,typeid,typename,using,virtual,wchar_t" />
	<plugin title="Java"			class="lu.fisch.structorizer.generators.JavaGenerator"      icon="" reserved_words="abstract,assert,boolean,break,byte,case,catch,char,class,const,continue,default,do,double,else,enum,extends,false,final,finally,float,for,goto,if,implements,import,instanceof,int,interface,long,native,new,null,package,private,protected,public,return,short,static,super,switch,synchronised,this,throw,throws,transient,true,try,void,volatile,while" />
	<plugin title="Javascript"		class="lu.fisch.structorizer.generators.JsGenerator"        icon="" reserved_words="abstract,boolean,break,byte,case,catch,char,class,const,continue,debugger,default,delete,do,double,else,enum,export,extends,false,final,finally,float,for,goto,if,implements,import,in,instanceof,int,interface,let,long,native,new,null,of,package,private,protected,public,return,short,static,super,switch,synchronised,this,throw,throws,transient,true,try,typeof,var,void,volatile,while,with" />
	<plugin title="PHP"				class="lu.fisch.structorizer.generators.PHPGenerator"       icon="" reserved_words="abstract,and,array,as,break,case,catch,class,clone,const,continue,declare,default,do,echo,else,elseif,enddeclare,endfor,endforeach,endif,endswith,endwhile,exit,extends,final,finally,for,foreach,function,global,goto,if,implements,include,instanceof,insteadof,interface,namespace,new,or,print,private,protected,public,require,return,static,switch,throw,trait,try,use,var,while,xor,yield" />
	<plugin title="Python"			class="lu.fisch.structorizer.generators.PythonGenerator"    icon="" case_matters="0" reserved_words="and,assert,break,class,continue,def,del,else,elif,except,exec,finally,for,from,global,if,import,in,is,lambda,not,or,pass,print,raise,return,try,while,Data,Float,Int,Numeric,Oxphys,array,close,float,int,input,open,range,type,write,zeros" />
	<plugin title="Basic" 			class="lu.fisch.structorizer.generators.BasGenerator"       icon="" case_matters="0" reserved_words="FUNCTION,SUB,REM,LET,AS,DIM,IF,THEN,ELSE,END,SELECT,CASE,FOR,TO,STEP,NEXT,DO,WHILE,UNTIL,LOOP,CALL,RETURN,GOTO,GOSUB,STOP,INPUT,PRINT,READ,DATA,RESTORE,AND,OR,NOT" >
		<option type="Boolean" name="lineNumbering" title="Generate code line numbers" help="This option also modifies the entire syntax towards Vintage BASIC." />
	</plugin>
	<plugin title="ARM"				class="lu.fisch.structorizer.generators.ArmGenerator"       icon="" case_matters="0" reserved_words="">
		<option type="Boolean" name="gnuCode" title="GNU compiler syntax (instead of KEIL)" />
		<option type="Boolean" name="alignArrays" title="Guarantee memory alignment for data and code" help="Inserts .align directives before any data allocation and at the beginning of the text area (GNU mode only)." default="true" />
		<option type="Boolean" name="terminateStrings" title="Store strings with 0-termination" help="Normally strings will be stored as arrays of only the contained characters. This option will add a terminating NUL character" />
		<option type="Boolean" name="restrictedSyntax" title="Restrict to Element content on ARM level" help="Don't make use of extended compiling capabilities, reject all content that exceeds ARM level." />
		<syntax class="lu.fisch.structorizer.generators.ArmLineParser" source="string" title="Check compliance with restrictive ARM-specific syntax conventions" message="ARM syntax violation"/>
	</plugin>
	<!-- plugin title="COBOL"			class="lu.fisch.structorizer.generators.COBOLGenerator"     icon="" case_matters="0" reserved_words="ACCEPT,ACCESS,ADD,ADDRESS,ADVANCING,AFTER,ALIGNED,ALL,ALLOCATE,ALPHABET,ALPHABETIC,ALPHANUMERIC,ALSO,ALTER,ALTERNATE,AND,ANY,ANYCASE,ARE,AREA,AREAS,ARITHMETIC,AS,ASCENDING,ASCII,ASSIGN,AT,ATTRIBUTE,AUTO,AUTOMATIC,BASED,BEFORE,BELL,BINARY,BIT,BLANK,BLINK,BLOCK,BOOLEAN,BOTTOM,BY,CALL,CANCEL,CAPACITY,CASSETTE,CD,CENTER,CF,CH,CHAIN,CHAINING,CHARACTER,CHARACTERS,CLASS,CLASSIFICATION,CLOSE,COBOL,CODE,COL,COLLATING,COLOR,COLS,COLUMN,COLUMNS,COMMA,COMMIT,COMMON,COMMUNICATION,COMP,COMPUTATIONAL,COMPUTE,CONDITION,CONFIGURATION,CONSTANT,CONTAINS,CONTENT,CONTINUE,CONTROL,CONTROLS,CONVERSION,CONVERTING,COPY,CORR,CORRESPONDING,COUNT,CRT,CURRENCY,CURSOR,CYCLE,DATA,DATE,DAY,DE,DEBUGGING,DECLARATIVES,DEFAULT,DELETE,DELIMITED,DELIMITER,DEPENDING,DESCENDING,DESTINATION,DETAIL,DISABLE,DISC,DISK,DISPLAY,DIVIDE,DIVISION,DOWN,DUPLICATES,DYNAMIC,EBCDIC,EC,ECHO,EGI,ELSE,EMI,ENABLE,END,ENVIRONMENT,EO,EOL,EOP,EOS,EQUAL,ERASE,ERROR,ESCAPE,ESI,EVALUATE,EXCEPTION,EXCLUSIVE,EXIT,EXPANDS,EXTEND,EXTERN,EXTERNAL,FACTORY,FALSE,FD,FILE,FILLER,FINAL,FIRST,FIXED,FOOTING,FOR,FOREVER,FORMAT,FREE,FROM,FULL,FUNCTION,GENERATE,GET,GIVING,GLOBAL,GO,GOBACK,GREATER,GRID,GROUP,HEADING,HIGHLIGHT,ID,IDENTIFICATION,IF,IGNORE,IGNORING,IMPLEMENTS,IN,INDEX,INDEXED,INDICATE,INHERITS,INITIAL,INITIALIZE,INITIALIZED,INITIATE,INPUT,INSPECT,INTERFACE,INTERMEDIATE,INTO,INTRINSIC,INVALID,INVOKE,IS,JUST,JUSTIFIED,KEPT,KEY,KEYBOARD,LABEL,LAST,LC_ALL,LC_COLLATE,LC_CTYPE,LC_MESSAGES,LC_MONETARY,LC_NUMERIC,LC_TIME,LEADING,LEFT,LEFTLINE,LENGTH,LESS,LIMIT,LIMITS,LINAGE,LINE,LINES,LINKAGE,LOCALE,LOCK,LOWER,LOWLIGHT,MANUAL,MEMORY,MERGE,MESSAGE,METHOD,MINUS,MODE,MOVE,MULTIPLE,MULTIPLY,NAME,NATIONAL,NATIVE,NEGATIVE,NESTED,NEXT,NO,NONE,NORMAL,NOT,NOTHING,NULL,NULLS,NUMBER,NUMBERS,NUMERIC,OBJECT,OCCURS,OF,OFF,OMITTED,ON,ONLY,OPEN,OPTIONAL,OPTIONS,OR,ORDER,ORGANIZATION,OTHER,OUTPUT,OVERFLOW,OVERLINE,OVERRIDE,PADDING,PAGE,PARAGRAPH,PERFORM,PF,PH,PIC,PICTURE,PLUS,POINTER,POSITION,POSITIVE,PREFIXED,PRESENT,PREVIOUS,PRINT,PRINTER,PRINTING,PROCEDURE,PROCEDURES,PROCEED,PROGRAM,PROHIBITED,PROMPT,PROPERTY,PROTECTED,PROTOTYPE,PURGE,QUEUE,QUOTE,QUOTES,RAISE,RAISING,RANDOM,RD,READ,RECEIVE,RECORD,RECORDING,RECORDS,RECURSIVE,REDEFINES,REEL,REFERENCE,REFERENCES,RELATION,RELATIVE,RELEASE,REMAINDER,REMOVAL,RENAMES,REPLACE,REPLACING,REPORT,REPORTING,REPORTS,REPOSITORY,REQUIRED,RESERVE,RESET,RESUME,RETRY,RETURN,RETURNING,REVERSE,REVERSED,REWIND,REWRITE,RF,RH,RIGHT,ROLLBACK,ROUNDED,ROUNDING,RUN,S,SAME,SCREEN,SCROLL,SD,SEARCH,SECONDS,SECTION,SECURE,SEGMENT,SELECT,SELF,SEND,SENTENCE,SEPARATE,SEQUENCE,SEQUENTIAL,SET,SHARING,SHORT,SIGN,SIGNED,SIZE,SORT,SOURCE,SOURCES,SPACE,SPACES,STANDARD,START,STATEMENT,STATIC,STATUS,STDCALL,STEP,STOP,STRING,STRONG,SUBTRACT,SUM,SUPER,SUPPRESS,SYMBOL,SYMBOLIC,SYNC,SYNCHRONIZED,TAB,TABLE,TALLYING,TAPE,TERMINAL,TERMINATE,TEST,TEXT,THAN,THEN,THROUGH,THRU,TIME,TIMES,TO,TOP,TRAILING,TRANSFORM,TRUE,TRUNCATION,TYPE,TYPEDEF,UUNBOUNDED,UNDERLINE,UNIT,UNIVERSAL,UNLOCK,UNSIGNED,UNSTRING,UNTIL,UP,UPDATE,UPON,UPPER,USAGE,USE,USER,USING,VALID,VALIDATE,VALUE,VALUES,VARIABLE,VARYING,WAIT,WHEN,WITH,WORDS,WRITE,YYYYDDD,YYYYMMDD,ZERO,ZEROES,ZEROS">
		<option type="Boolean" name="fixedFormat" title="Fixed-form format" help="Use fixed-form reference format, otherwise free-form is used"/>
		<option type="Boolean" name="underscores2hyphens" title="Underscores to hyphens in names" help="Decide if underscores in identifiers are to be replaced by hyphens"/>
		<option type="Boolean" name="lineNumbering" title="Generate code line numbers" help="This option consecutively numbers the exported code lines."/>
		<option type="Unsigned" name="dataLevelIncrement" title="Data level increment" help="The step in the level numbers in composed data items"/>
	</plugin -->
	<plugin title="StrukTeX" 		class="lu.fisch.structorizer.generators.TexGenerator"       icon="" />
	<plugin title="LaTeX/Algorithm"	class="lu.fisch.structorizer.generators.TexAlgGenerator"    icon="">
		<option type="Enum" name="package" title="LaTeX package to be used" help="Choose your preferred package for algorithms">
			<item value="algorithmicx" />
			<item value="algorithmic" />
			<item value="algorithm2e" />
			<item value="pseudocode" />
		</option>
		<option type="Unsigned" name="numberingInterval" title="Line numbering step" help="As far as supported by the package: 0 for no numbering, 1 for each line, n for every nth line" />
		<option type="Boolean" name="appendSemicolon" title="Put a semicolon after any instruction" help="Check this if instructions are to be followed by ';'" />
	</plugin>
</plugins>
